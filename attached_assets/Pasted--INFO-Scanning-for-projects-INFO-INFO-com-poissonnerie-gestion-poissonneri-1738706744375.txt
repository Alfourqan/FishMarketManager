[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------< com.poissonnerie:gestion-poissonnerie >----------------
[INFO] Building gestion-poissonnerie 1.0-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ gestion-poissonnerie ---
[INFO] Deleting /home/runner/workspace/target
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ gestion-poissonnerie ---
[INFO] Copying 1 resource from src/main/resources to target/classes
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ gestion-poissonnerie ---
[INFO] Changes detected - recompiling the module! :source
[INFO] Compiling 41 source files with javac [debug target 11] to target/classes
[WARNING] system modules path not set in conjunction with -source 11
[WARNING] /home/runner/workspace/src/main/java/com/poissonnerie/view/ConfigurationViewSwing.java:[754,77] unchecked cast
  required: javax.swing.JComboBox<java.lang.String>
  found:    javax.swing.JComponent
[WARNING] /home/runner/workspace/src/main/java/com/poissonnerie/view/ConfigurationViewSwing.java:[767,78] unchecked cast
  required: javax.swing.JComboBox<java.lang.String>
  found:    javax.swing.JComponent
[WARNING] /home/runner/workspace/src/main/java/com/poissonnerie/view/ConfigurationViewSwing.java:[809,86] unchecked cast
  required: javax.swing.JComboBox<java.lang.String>
  found:    javax.swing.JComponent
[WARNING] /home/runner/workspace/src/main/java/com/poissonnerie/view/ConfigurationViewSwing.java:[812,86] unchecked cast
  required: javax.swing.JComboBox<java.lang.String>
  found:    javax.swing.JComponent
[WARNING] /home/runner/workspace/src/main/java/com/poissonnerie/view/ReportViewSwing.java:[88,41] unchecked cast
  required: java.util.List<com.poissonnerie.model.Produit>
  found:    java.util.List<capture#1 of ?>
[WARNING] /home/runner/workspace/src/main/java/com/poissonnerie/view/ReportViewSwing.java:[89,78] unchecked cast
  required: java.util.List<com.poissonnerie.model.Produit>
  found:    java.util.List<capture#2 of ?>
[INFO] 
[INFO] --- exec:3.1.0:java (default-cli) @ gestion-poissonnerie ---
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager createNewConnection
INFO: Nouvelle connexion créée avec succès
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager main
INFO: Initialisation forcée de la base de données...
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager reinitializeDatabase
INFO: Réinitialisation forcée de la base de données...
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager reinitializeDatabase
INFO: Ancien fichier de base de données supprimé
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Initialisation de la base de données...
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Création du fichier de base de données...
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager createNewConnection
INFO: Nouvelle connexion créée avec succès
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initializePragmas
INFO: PRAGMAs initialisés avec succès
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager getSingletonConnection
INFO: Nouvelle connexion créée
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initializePragmas
INFO: PRAGMAs initialisés avec succès
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager loadSchemaFromResource
INFO: Chargement du schéma SQL depuis les ressources...
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager loadSchemaFromResource
INFO: Schéma SQL chargé avec succès
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Configuration optimisée SQLite avec verrouillage robuste
PRAGMA journal_mode = WAL
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Mode de verrouillage exclusif
PRAGMA journal_size_limit = 67108864
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Limite de 64MB pour le journal WAL
PRAGMA mmap_size = 268435456
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Utilisation de 256MB pour le mapping mémoire
PRAGMA foreign_keys = OFF
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Désactivé temporairement pour la migration

-- Tables principales dans l'ordre de dépendance
DROP TABLE IF EXISTS reglements_clients
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: DROP TABLE IF EXISTS mouvements_caisse
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: DROP TABLE IF EXISTS user_actions
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: DROP TABLE IF EXISTS ventes
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: DROP TABLE IF EXISTS lignes_vente
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: DROP TABLE IF EXISTS produits
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: DROP TABLE IF EXISTS fournisseurs
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: DROP TABLE IF EXISTS users
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: DROP TABLE IF EXISTS configurations
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    role TEXT NOT NULL DEFAULT 'USER',
    created_at INTEGER NOT NULL DEFAULT (strftime('%s','now') * 1000),
    last_login INTEGER,
    active BOOLEAN DEFAULT true,
    force_password_reset BOOLEAN DEFAULT false,
    CONSTRAINT username_min_length CHECK (length(username) >= 3),
    CONSTRAINT password_min_length CHECK (length(password) >= 6)
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE IF NOT EXISTS configurations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    cle TEXT NOT NULL UNIQUE,
    valeur TEXT,
    description TEXT,
    CONSTRAINT cle_not_empty CHECK (length(trim(cle)) > 0)
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE IF NOT EXISTS fournisseurs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nom TEXT NOT NULL,
    contact TEXT,
    telephone TEXT,
    email TEXT,
    adresse TEXT,
    statut TEXT DEFAULT 'Actif',
    supprime BOOLEAN DEFAULT false,
    CONSTRAINT nom_fournisseur_min_length CHECK (length(trim(nom)) >= 2),
    CONSTRAINT contact_min_length CHECK (contact IS NULL OR length(trim(contact)) >= 2),
    CONSTRAINT telephone_format CHECK (telephone IS NULL OR length(trim(telephone)) >= 8),
    CONSTRAINT email_format CHECK (email IS NULL OR email LIKE '%@%.%'),
    CONSTRAINT adresse_min_length CHECK (adresse IS NULL OR length(trim(adresse)) >= 5),
    CONSTRAINT statut_valide CHECK (statut IN ('Actif', 'Inactif', 'En attente'))
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Créer un fournisseur par défaut
INSERT INTO fournisseurs (nom, contact, telephone, email, statut) 
VALUES ('Fournisseur par défaut', 'Contact', '0123456789', 'contact@default.com', 'Actif')
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE IF NOT EXISTS produits (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nom TEXT NOT NULL,
    categorie TEXT NOT NULL,
    prix_achat REAL NOT NULL,
    prix_vente REAL NOT NULL,
    stock INTEGER NOT NULL,
    seuil_alerte INTEGER NOT NULL,
    fournisseur_id INTEGER,
    supprime BOOLEAN DEFAULT false,
    CONSTRAINT nom_produit_min_length CHECK (length(trim(nom)) >= 2),
    CONSTRAINT categorie_valide CHECK (trim(categorie) IN ('Frais', 'Surgelé', 'Transformé')),
    CONSTRAINT prix_achat_positif CHECK (prix_achat > 0),
    CONSTRAINT prix_vente_positif CHECK (prix_vente > 0),
    CONSTRAINT prix_vente_superieur CHECK (prix_vente > prix_achat),
    CONSTRAINT stock_positif CHECK (stock >= 0),
    CONSTRAINT seuil_alerte_positif CHECK (seuil_alerte >= 0),
    FOREIGN KEY (fournisseur_id) REFERENCES fournisseurs(id)
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE IF NOT EXISTS clients (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nom TEXT NOT NULL,
    telephone TEXT,
    adresse TEXT,
    solde REAL DEFAULT 0,
    supprime BOOLEAN DEFAULT false,
    CONSTRAINT nom_client_min_length CHECK (length(trim(nom)) >= 2),
    CONSTRAINT telephone_format CHECK (telephone IS NULL OR length(trim(telephone)) >= 8),
    CONSTRAINT adresse_min_length CHECK (adresse IS NULL OR length(trim(adresse)) >= 5),
    CONSTRAINT solde_valide CHECK (solde IS NULL OR TYPEOF(solde) = 'real' OR TYPEOF(solde) = 'integer')
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE mouvements_caisse (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    date TEXT DEFAULT (datetime('now', 'localtime')),
    type TEXT NOT NULL CHECK (type IN ('ENTREE', 'SORTIE', 'OUVERTURE', 'CLOTURE')),
    montant REAL NOT NULL CHECK (montant > 0),
    description TEXT,
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT description_min_length CHECK (description IS NULL OR length(trim(description)) >= 3)
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE user_actions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    action_type TEXT NOT NULL,
    username TEXT NOT NULL,
    date_time TEXT NOT NULL,
    description TEXT NOT NULL,
    entity_type TEXT NOT NULL,
    entity_id INTEGER NOT NULL,
    user_id INTEGER,
    FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT description_min_length CHECK (length(trim(description)) >= 3)
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE ventes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    date INTEGER NOT NULL DEFAULT (strftime('%s','now') * 1000),
    client_id INTEGER,
    credit INTEGER DEFAULT 0,
    total REAL NOT NULL,
    supprime BOOLEAN DEFAULT false,
    FOREIGN KEY (client_id) REFERENCES clients(id),
    CONSTRAINT total_positif CHECK (total >= 0),
    CONSTRAINT credit_positif CHECK (credit >= 0)
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE TABLE lignes_vente (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    vente_id INTEGER,
    produit_id INTEGER,
    quantite INTEGER NOT NULL,
    prix_unitaire REAL NOT NULL,
    FOREIGN KEY (vente_id) REFERENCES ventes(id),
    FOREIGN KEY (produit_id) REFERENCES produits(id),
    CONSTRAINT quantite_positive CHECK (quantite > 0),
    CONSTRAINT prix_unitaire_positif CHECK (prix_unitaire > 0)
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Nouvelle table pour les règlements clients
CREATE TABLE IF NOT EXISTS reglements_clients (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    client_id INTEGER NOT NULL,
    date INTEGER NOT NULL DEFAULT (strftime('%s','now') * 1000),
    montant REAL NOT NULL,
    type_paiement TEXT NOT NULL,
    commentaire TEXT,
    vente_id INTEGER,
    user_id INTEGER,
    FOREIGN KEY (client_id) REFERENCES clients(id),
    FOREIGN KEY (vente_id) REFERENCES ventes(id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT montant_positif CHECK (montant > 0),
    CONSTRAINT type_paiement_valide CHECK (type_paiement IN ('ESPECES', 'CARTE', 'CHEQUE', 'VIREMENT')),
    CONSTRAINT commentaire_min_length CHECK (commentaire IS NULL OR length(trim(commentaire)) >= 3)
)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Ajout des index pour la nouvelle table
CREATE INDEX IF NOT EXISTS idx_reglements_clients_client ON reglements_clients(client_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_reglements_clients_date ON reglements_clients(date)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_reglements_clients_vente ON reglements_clients(vente_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_reglements_clients_user ON reglements_clients(user_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Index optimisés
CREATE INDEX IF NOT EXISTS idx_users_username ON users(username)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_produits_nom ON produits(nom)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_produits_categorie ON produits(categorie)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_clients_nom ON clients(nom)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_ventes_date ON ventes(date)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_ventes_client ON ventes(client_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_lignes_vente_vente ON lignes_vente(vente_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_lignes_vente_produit ON lignes_vente(produit_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_mouvements_caisse_date ON mouvements_caisse(date)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_mouvements_caisse_type ON mouvements_caisse(type)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_mouvements_caisse_user ON mouvements_caisse(user_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_user_actions_date ON user_actions(date_time)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_user_actions_type ON user_actions(action_type)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_user_actions_entity ON user_actions(entity_type, entity_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: CREATE INDEX IF NOT EXISTS idx_user_actions_user ON user_actions(user_id)
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Configurations par défaut
INSERT OR IGNORE INTO configurations (cle, valeur, description) VALUES
('TAUX_TVA', '20.0', 'Taux de TVA en pourcentage'),
('TVA_ENABLED', 'true', 'Activation/désactivation de la TVA'),
('NOM_ENTREPRISE', '', 'Nom de l''entreprise'),
('ADRESSE_ENTREPRISE', '', 'Adresse de l''entreprise'),
('TELEPHONE_ENTREPRISE', '', 'Numéro de téléphone de l''entreprise'),
('EMAIL_ENTREPRISE', '', 'Adresse email de l''entreprise'),
('SIRET_ENTREPRISE', '12345678901234', 'Numéro SIRET de l''entreprise')
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Exécution de la requête: -- Réactivation des foreign keys après la migration
PRAGMA foreign_keys = ON
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager initDatabase
INFO: Base de données initialisée avec succès
Feb 04, 2025 10:03:57 PM com.poissonnerie.util.DatabaseManager reinitializeDatabase
INFO: Base de données réinitialisée avec succès
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.967 s
[INFO] Finished at: 2025-02-04T22:03:57Z
[INFO] ------------------------------------------------------------------------
